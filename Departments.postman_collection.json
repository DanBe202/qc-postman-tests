{
	"info": {
		"_postman_id": "9f8f9f04-8133-4c21-99b0-0b8daf1bfa7a",
		"name": "Departments",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31710031",
		"_collection_link": "https://cloudy-space-261172.postman.co/workspace/schedule-app~e1eb4263-f471-4b6a-b44c-878844cc12d4/collection/31710031-9f8f9f04-8133-4c21-99b0-0b8daf1bfa7a?action=share&source=collection_link&creator=31710031"
	},
	"item": [
		{
			"name": "sign-in Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"token\", pm.response.json().token)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \"email\": \"new_manager@gmail.com\", \"password\": \"String!123\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/auth/sign-in",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"auth",
						"sign-in"
					]
				}
			},
			"response": []
		},
		{
			"name": "create-department",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Name is set correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(pm.collectionVariables.get(\"newDepartmentName\"));",
							"});",
							"",
							"pm.test(\"Created is not disabled\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.disable).to.eql(false);",
							"});",
							"",
							"pm.environment.set(\"department_id\", pm.response.json().id)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer_{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \"disable\": false, \"name\": \"{{newDepartmentName}}\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/departments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"departments"
					]
				}
			},
			"response": []
		},
		{
			"name": "create-department-same-name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Error message is correct\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Department with provided name already exists\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer_{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \"disable\": false, \"name\": \"{{newDepartmentName}}\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/departments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"departments"
					]
				}
			},
			"response": []
		},
		{
			"name": "create-empty-department",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Error message is correct\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Name cannot be blank\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"packages": {},
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer_{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \"disable\": false, \"name\": \"\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/departments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"departments"
					]
				}
			},
			"response": []
		},
		{
			"name": "create-long-name-department",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Check if name cannot be longer than 50 symbols\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.include(\"longer\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer_{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n    \"disable\": false, \n    \"name\": \"{{departmentLongName}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/departments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"departments"
					]
				}
			},
			"response": []
		},
		{
			"name": "get-departments",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response is an array\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('array');",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer_{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8081/departments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"departments"
					]
				}
			},
			"response": []
		},
		{
			"name": "get-departments-unauthorized",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should be unauthorized\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/departments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"departments"
					]
				}
			},
			"response": []
		},
		{
			"name": "get-departmet-by-id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Department name exists\", function () {",
							"    const json = pm.response.json();",
							"    pm.expect(json).to.have.property(\"name\");",
							"});",
							"",
							"pm.test(\"Department id exists\", function () {",
							"    const json = pm.response.json();",
							"    pm.expect(json).to.have.property(\"id\");",
							"});",
							"",
							"pm.test(\"Department disable exists\", function () {",
							"    const json = pm.response.json();",
							"    pm.expect(json).to.have.property(\"disable\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer_{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8081/departments/{{department_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"departments",
						"{{department_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get-departmet-by-wrong-id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should return 404 for non-existent department\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer_{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/departments/99999",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"departments",
						"99999"
					]
				}
			},
			"response": []
		},
		{
			"name": "get-department-teachers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"let schema = {",
							"  \"type\": \"array\",",
							"  \"items\": [",
							"    {",
							"      \"type\": \"object\",",
							"      \"properties\": {",
							"        \"department\": {",
							"          \"type\": \"object\",",
							"          \"properties\": {",
							"            \"disable\": {",
							"              \"type\": \"boolean\"",
							"            },",
							"            \"id\": {",
							"              \"type\": \"integer\"",
							"            },",
							"            \"name\": {",
							"              \"type\": \"string\"",
							"            }",
							"          },",
							"          \"required\": [",
							"            \"disable\",",
							"            \"id\",",
							"            \"name\"",
							"          ]",
							"        },",
							"        \"disable\": {",
							"          \"type\": \"boolean\"",
							"        },",
							"        \"email\": {",
							"          \"type\": \"string\"",
							"        },",
							"        \"id\": {",
							"          \"type\": \"integer\"",
							"        },",
							"        \"name\": {",
							"          \"type\": \"string\"",
							"        },",
							"        \"patronymic\": {",
							"          \"type\": \"string\"",
							"        },",
							"        \"position\": {",
							"          \"type\": \"string\"",
							"        },",
							"        \"surname\": {",
							"          \"type\": \"string\"",
							"        }",
							"      },",
							"      \"required\": [",
							"        \"department\",",
							"        \"disable\",",
							"        \"email\",",
							"        \"id\",",
							"        \"name\",",
							"        \"patronymic\",",
							"        \"position\",",
							"        \"surname\"",
							"      ]",
							"    }",
							"  ]",
							"}",
							"",
							"pm.test(\"Validate scema\", function () {",
							"    const teachers = pm.response.json();",
							"    pm.response.to.have.jsonSchema(schema)",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer_{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/departments/{{department_id}}/teachers",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"departments",
						"{{department_id}}",
						"teachers"
					]
				}
			},
			"response": []
		},
		{
			"name": "get-disabled-departments",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Contains disabled departments\", function () {",
							"    const deps = pm.response.json();",
							"    pm.expect(deps.every(dep => dep.disable === true)).to.be.true;",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer_{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:8081/departments/disabled",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"departments",
						"disabled"
					]
				}
			},
			"response": []
		},
		{
			"name": "redact-department",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response has updated name\", function () {",
							"    pm.expect(pm.response.json().name).to.include(pm.collectionVariables.get(\"redactedDepartmentName\"));",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer_{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{  \n  \"disable\": false,\n  \"id\": {{department_id}},\n  \"name\": \"{{redactedDepartmentName}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/departments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"departments"
					]
				}
			},
			"response": []
		},
		{
			"name": "redact-department-wrong-id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should fail with 404 for invalid ID or empty name\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer_{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": 99999,\n  \"name\": \"TestName\",\n  \"disable\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/departments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"departments"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete-departnemt",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response of the deleted name is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(pm.collectionVariables.get(\"redactedDepartmentName\"));",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer_{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8081/departments/{{department_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"departments",
						"{{department_id}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"pm.sendRequest({",
					"    url: 'http://localhost:8081/auth/sign-in', ",
					"    method: 'POST',",
					"    header: {",
					"        'Content-Type': 'application/json'",
					"    },",
					"    body: {",
					"        mode: 'raw',",
					"        raw: JSON.stringify(",
					"            {\"email\": \"new_manager@gmail.com\",",
					"\"password\":\"String!123\"})",
					"    }",
					"}, function (err, response) {",
					"    if (err) {",
					"        console.error(err);",
					"    } else {",
					"        pm.environment.set(\"token\", response.json().token)",
					"    }",
					"})"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "newDepartmentName",
			"value": "Department1",
			"type": "string"
		},
		{
			"key": "redactedDepartmentName",
			"value": "DepartmentRedacted",
			"type": "string"
		},
		{
			"key": "departmentLongName",
			"value": "qwertyuiopqwertyuiopqwertyuiopqwertyuiopqwertyuiop",
			"type": "string"
		}
	]
}